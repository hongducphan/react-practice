(function(global, factory) {
  typeof exports === "object" && typeof module !== "undefined"
    ? factory(exports, require("@angular/core"))
    : typeof define === "function" && define.amd
    ? define("format-code", ["exports", "@angular/core"], factory)
    : factory((global["format-code"] = {}), global.ng.core);
})(this, function(exports, core) {
  "use strict";

  /**
   * @fileoverview added by tsickle
   * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
   */
  var FormatCodeComponent = /** @class */ (function() {
    function FormatCodeComponent(renderer, el) {
      this.renderer = renderer;
      this.el = el;
      this.color = "rgb(42,100,250)";
      this.bgColor = "rgba(0,0,30,0.9)";
      this.font = "consolas, monospace";
    }
    /**
     * @return {?}
     */
    FormatCodeComponent.prototype.ngOnInit
    /**
     * @return {?}
     */ = function() {
      this.renderer.setStyle(
        this.el.nativeElement.firstElementChild,
        "color",
        this.color
      );
      this.renderer.setStyle(
        this.el.nativeElement.firstElementChild,
        "backgroundColor",
        this.bgColor
      );
      this.renderer.setStyle(
        this.el.nativeElement.firstElementChild,
        "font-family",
        this.font
      );
    };
    FormatCodeComponent.decorators = [
      {
        type: core.Component,
        args: [
          {
            selector: "format-code",
            template:
              "\n    <div>\n      <ng-content></ng-content>\n    </div>\n  ",
            styles: [
              "\n    div {\n      padding: 20px;\n      margin: 10px auto;\n      box-shadow: 1px 3px 10px 1px rgba(0, 0, 0, 0.3);\n      border-radius: 7px;\n    }\n  "
            ]
          }
        ]
      }
    ];
    /** @nocollapse */
    FormatCodeComponent.ctorParameters = function() {
      return [{ type: core.Renderer2 }, { type: core.ElementRef }];
    };
    FormatCodeComponent.propDecorators = {
      color: [{ type: core.Input }],
      bgColor: [{ type: core.Input }],
      font: [{ type: core.Input }]
    };
    return FormatCodeComponent;
  })();

  /**
   * @fileoverview added by tsickle
   * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
   */
  var FormatCodeModule = /** @class */ (function() {
    function FormatCodeModule() {}
    FormatCodeModule.decorators = [
      {
        type: core.NgModule,
        args: [
          {
            declarations: [FormatCodeComponent],
            imports: [],
            exports: [FormatCodeComponent]
          }
        ]
      }
    ];
    return FormatCodeModule;
  })();

  /**
   * @fileoverview added by tsickle
   * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
   */

  /**
   * @fileoverview added by tsickle
   * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
   */

  exports.FormatCodeComponent = FormatCodeComponent;
  exports.FormatCodeModule = FormatCodeModule;

  Object.defineProperty(exports, "__esModule", { value: true });
});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LWNvZGUudW1kLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9mb3JtYXQtY29kZS9saWIvZm9ybWF0LWNvZGUuY29tcG9uZW50LnRzIiwibmc6Ly9mb3JtYXQtY29kZS9saWIvZm9ybWF0LWNvZGUubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBSZW5kZXJlcjIsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zvcm1hdC1jb2RlJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2PlxuICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIDwvZGl2PlxuICBgLFxuICBzdHlsZXM6IFtgXG4gICAgZGl2IHtcbiAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICBtYXJnaW46IDEwcHggYXV0bztcbiAgICAgIGJveC1zaGFkb3c6IDFweCAzcHggMTBweCAxcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgICAgYm9yZGVyLXJhZGl1czogN3B4O1xuICAgIH1cbiAgYF1cbn0pXG5leHBvcnQgY2xhc3MgRm9ybWF0Q29kZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGNvbG9yOiBzdHJpbmcgPSBcInJnYig0MiwxMDAsMjUwKVwiXG4gIEBJbnB1dCgpIGJnQ29sb3I6IHN0cmluZyA9IFwicmdiYSgwLDAsMzAsMC45KVwiXG4gIEBJbnB1dCgpIGZvbnQ6IHN0cmluZyA9IFwiY29uc29sYXMsIG1vbm9zcGFjZVwiXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcHJpdmF0ZSBlbDogRWxlbWVudFJlZikgeyB9XG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LmZpcnN0RWxlbWVudENoaWxkLCAnY29sb3InLCB0aGlzLmNvbG9yKVxuICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LmZpcnN0RWxlbWVudENoaWxkLCAnYmFja2dyb3VuZENvbG9yJywgdGhpcy5iZ0NvbG9yKVxuICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LmZpcnN0RWxlbWVudENoaWxkLCAnZm9udC1mYW1pbHknLCB0aGlzLmZvbnQpXG4gIH1cbn0iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybWF0Q29kZUNvbXBvbmVudCB9IGZyb20gJy4vZm9ybWF0LWNvZGUuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWF0Q29kZUNvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtcbiAgXSxcbiAgZXhwb3J0czogW0Zvcm1hdENvZGVDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1hdENvZGVNb2R1bGUgeyB9XG4iXSwibmFtZXMiOlsiQ29tcG9uZW50IiwiUmVuZGVyZXIyIiwiRWxlbWVudFJlZiIsIklucHV0IiwiTmdNb2R1bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQTtRQXFCRSw2QkFBb0IsUUFBbUIsRUFBVSxFQUFjO1lBQTNDLGFBQVEsR0FBUixRQUFRLENBQVc7WUFBVSxPQUFFLEdBQUYsRUFBRSxDQUFZO1lBSHRELFVBQUssR0FBVyxpQkFBaUIsQ0FBQTtZQUNqQyxZQUFPLEdBQVcsa0JBQWtCLENBQUE7WUFDcEMsU0FBSSxHQUFXLHFCQUFxQixDQUFBO1NBQ3VCOzs7O1FBQ3BFLHNDQUFROzs7WUFBUjtnQkFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO2dCQUNwRixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7Z0JBQ2hHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLGlCQUFpQixFQUFFLGFBQWEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7YUFDMUY7O29CQXpCRkEsY0FBUyxTQUFDO3dCQUNULFFBQVEsRUFBRSxhQUFhO3dCQUN2QixRQUFRLEVBQUUsOERBSVQ7aUNBQ1EsMkpBT1I7cUJBQ0Y7Ozs7O3dCQWhCa0NDLGNBQVM7d0JBQUVDLGVBQVU7Ozs7NEJBa0JyREMsVUFBSzs4QkFDTEEsVUFBSzsyQkFDTEEsVUFBSzs7UUFPUiwwQkFBQztLQTFCRDs7Ozs7O0FDRkE7UUFHQTtTQU1pQzs7b0JBTmhDQyxhQUFRLFNBQUM7d0JBQ1IsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUM7d0JBQ25DLE9BQU8sRUFBRSxFQUNSO3dCQUNELE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO3FCQUMvQjs7UUFDK0IsdUJBQUM7S0FOakM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
