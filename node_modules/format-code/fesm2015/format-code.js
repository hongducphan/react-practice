import {
  Component,
  Input,
  Renderer2,
  ElementRef,
  NgModule
} from "@angular/core";

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
class FormatCodeComponent {
  /**
   * @param {?} renderer
   * @param {?} el
   */
  constructor(renderer, el) {
    this.renderer = renderer;
    this.el = el;
    this.color = "rgb(42,100,250)";
    this.bgColor = "rgba(0,0,30,0.9)";
    this.font = "consolas, monospace";
  }
  /**
   * @return {?}
   */
  ngOnInit() {
    this.renderer.setStyle(
      this.el.nativeElement.firstElementChild,
      "color",
      this.color
    );
    this.renderer.setStyle(
      this.el.nativeElement.firstElementChild,
      "backgroundColor",
      this.bgColor
    );
    this.renderer.setStyle(
      this.el.nativeElement.firstElementChild,
      "font-family",
      this.font
    );
  }
}
FormatCodeComponent.decorators = [
  {
    type: Component,
    args: [
      {
        selector: "format-code",
        template: `
    <div>
      <ng-content></ng-content>
    </div>
  `,
        styles: [
          `
    div {
      padding: 20px;
      margin: 10px auto;
      box-shadow: 1px 3px 10px 1px rgba(0, 0, 0, 0.3);
      border-radius: 7px;
    }
  `
        ]
      }
    ]
  }
];
/** @nocollapse */
FormatCodeComponent.ctorParameters = () => [
  { type: Renderer2 },
  { type: ElementRef }
];
FormatCodeComponent.propDecorators = {
  color: [{ type: Input }],
  bgColor: [{ type: Input }],
  font: [{ type: Input }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
class FormatCodeModule {}
FormatCodeModule.decorators = [
  {
    type: NgModule,
    args: [
      {
        declarations: [FormatCodeComponent],
        imports: [],
        exports: [FormatCodeComponent]
      }
    ]
  }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */

export { FormatCodeComponent, FormatCodeModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LWNvZGUuanMubWFwIiwic291cmNlcyI6WyJuZzovL2Zvcm1hdC1jb2RlL2xpYi9mb3JtYXQtY29kZS5jb21wb25lbnQudHMiLCJuZzovL2Zvcm1hdC1jb2RlL2xpYi9mb3JtYXQtY29kZS5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIFJlbmRlcmVyMiwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZm9ybWF0LWNvZGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXY+XG4gICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW2BcbiAgICBkaXYge1xuICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgIG1hcmdpbjogMTBweCBhdXRvO1xuICAgICAgYm94LXNoYWRvdzogMXB4IDNweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAgICBib3JkZXItcmFkaXVzOiA3cHg7XG4gICAgfVxuICBgXVxufSlcbmV4cG9ydCBjbGFzcyBGb3JtYXRDb2RlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgY29sb3I6IHN0cmluZyA9IFwicmdiKDQyLDEwMCwyNTApXCJcbiAgQElucHV0KCkgYmdDb2xvcjogc3RyaW5nID0gXCJyZ2JhKDAsMCwzMCwwLjkpXCJcbiAgQElucHV0KCkgZm9udDogc3RyaW5nID0gXCJjb25zb2xhcywgbW9ub3NwYWNlXCJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLCBwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7IH1cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQsICdjb2xvcicsIHRoaXMuY29sb3IpXG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQsICdiYWNrZ3JvdW5kQ29sb3InLCB0aGlzLmJnQ29sb3IpXG4gICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuZmlyc3RFbGVtZW50Q2hpbGQsICdmb250LWZhbWlseScsIHRoaXMuZm9udClcbiAgfVxufSIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtYXRDb2RlQ29tcG9uZW50IH0gZnJvbSAnLi9mb3JtYXQtY29kZS5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtGb3JtYXRDb2RlQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW1xuICBdLFxuICBleHBvcnRzOiBbRm9ybWF0Q29kZUNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgRm9ybWF0Q29kZU1vZHVsZSB7IH1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxNQWlCYSxtQkFBbUI7Ozs7O0lBSTlCLFlBQW9CLFFBQW1CLEVBQVUsRUFBYztRQUEzQyxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBQVUsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQUh0RCxVQUFLLEdBQVcsaUJBQWlCLENBQUE7UUFDakMsWUFBTyxHQUFXLGtCQUFrQixDQUFBO1FBQ3BDLFNBQUksR0FBVyxxQkFBcUIsQ0FBQTtLQUN1Qjs7OztJQUNwRSxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUNwRixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDaEcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtLQUMxRjs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsUUFBUSxFQUFFOzs7O0dBSVQ7eUJBQ1E7Ozs7Ozs7R0FPUjthQUNGOzs7O1lBaEJrQyxTQUFTO1lBQUUsVUFBVTs7O29CQWtCckQsS0FBSztzQkFDTCxLQUFLO21CQUNMLEtBQUs7Ozs7Ozs7QUNyQlIsTUFTYSxnQkFBZ0I7OztZQU41QixRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUM7Z0JBQ25DLE9BQU8sRUFBRSxFQUNSO2dCQUNELE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO2FBQy9COzs7Ozs7Ozs7Ozs7Ozs7In0=
