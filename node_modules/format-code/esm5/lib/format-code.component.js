/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, Renderer2, ElementRef } from "@angular/core";
var FormatCodeComponent = /** @class */ (function() {
  function FormatCodeComponent(renderer, el) {
    this.renderer = renderer;
    this.el = el;
    this.color = "rgb(42,100,250)";
    this.bgColor = "rgba(0,0,30,0.9)";
    this.font = "consolas, monospace";
  }
  /**
   * @return {?}
   */
  FormatCodeComponent.prototype.ngOnInit
  /**
   * @return {?}
   */ = function() {
    this.renderer.setStyle(
      this.el.nativeElement.firstElementChild,
      "color",
      this.color
    );
    this.renderer.setStyle(
      this.el.nativeElement.firstElementChild,
      "backgroundColor",
      this.bgColor
    );
    this.renderer.setStyle(
      this.el.nativeElement.firstElementChild,
      "font-family",
      this.font
    );
  };
  FormatCodeComponent.decorators = [
    {
      type: Component,
      args: [
        {
          selector: "format-code",
          template:
            "\n    <div>\n      <ng-content></ng-content>\n    </div>\n  ",
          styles: [
            "\n    div {\n      padding: 20px;\n      margin: 10px auto;\n      box-shadow: 1px 3px 10px 1px rgba(0, 0, 0, 0.3);\n      border-radius: 7px;\n    }\n  "
          ]
        }
      ]
    }
  ];
  /** @nocollapse */
  FormatCodeComponent.ctorParameters = function() {
    return [{ type: Renderer2 }, { type: ElementRef }];
  };
  FormatCodeComponent.propDecorators = {
    color: [{ type: Input }],
    bgColor: [{ type: Input }],
    font: [{ type: Input }]
  };
  return FormatCodeComponent;
})();
export { FormatCodeComponent };
if (false) {
  /** @type {?} */
  FormatCodeComponent.prototype.color;
  /** @type {?} */
  FormatCodeComponent.prototype.bgColor;
  /** @type {?} */
  FormatCodeComponent.prototype.font;
  /** @type {?} */
  FormatCodeComponent.prototype.renderer;
  /** @type {?} */
  FormatCodeComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LWNvZGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vZm9ybWF0LWNvZGUvIiwic291cmNlcyI6WyJsaWIvZm9ybWF0LWNvZGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGO0lBb0JFLDZCQUFvQixRQUFtQixFQUFVLEVBQWM7UUFBM0MsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUFVLE9BQUUsR0FBRixFQUFFLENBQVk7UUFIdEQsVUFBSyxHQUFXLGlCQUFpQixDQUFBO1FBQ2pDLFlBQU8sR0FBVyxrQkFBa0IsQ0FBQTtRQUNwQyxTQUFJLEdBQVcscUJBQXFCLENBQUE7SUFDc0IsQ0FBQzs7OztJQUNwRSxzQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQ3BGLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLGlCQUFpQixFQUFFLGlCQUFpQixFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUNoRyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQzNGLENBQUM7O2dCQXpCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFFBQVEsRUFBRSw4REFJVDs2QkFDUSwySkFPUjtpQkFDRjs7OztnQkFoQmtDLFNBQVM7Z0JBQUUsVUFBVTs7O3dCQWtCckQsS0FBSzswQkFDTCxLQUFLO3VCQUNMLEtBQUs7O0lBT1IsMEJBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQVZZLG1CQUFtQjs7O0lBQzlCLG9DQUEwQzs7SUFDMUMsc0NBQTZDOztJQUM3QyxtQ0FBNkM7O0lBQ2pDLHVDQUEyQjs7SUFBRSxpQ0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgUmVuZGVyZXIyLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmb3JtYXQtY29kZScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdj5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVzOiBbYFxuICAgIGRpdiB7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgbWFyZ2luOiAxMHB4IGF1dG87XG4gICAgICBib3gtc2hhZG93OiAxcHggM3B4IDEwcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgICB9XG4gIGBdXG59KVxuZXhwb3J0IGNsYXNzIEZvcm1hdENvZGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBjb2xvcjogc3RyaW5nID0gXCJyZ2IoNDIsMTAwLDI1MClcIlxuICBASW5wdXQoKSBiZ0NvbG9yOiBzdHJpbmcgPSBcInJnYmEoMCwwLDMwLDAuOSlcIlxuICBASW5wdXQoKSBmb250OiBzdHJpbmcgPSBcImNvbnNvbGFzLCBtb25vc3BhY2VcIlxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHsgfVxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMuZWwubmF0aXZlRWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZCwgJ2NvbG9yJywgdGhpcy5jb2xvcilcbiAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMuZWwubmF0aXZlRWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZCwgJ2JhY2tncm91bmRDb2xvcicsIHRoaXMuYmdDb2xvcilcbiAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMuZWwubmF0aXZlRWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZCwgJ2ZvbnQtZmFtaWx5JywgdGhpcy5mb250KVxuICB9XG59Il19
