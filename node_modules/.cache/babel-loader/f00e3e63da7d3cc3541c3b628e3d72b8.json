{
  "ast": null,
  "code": "import _classCallCheck from \"/Users/hongducphan/Desktop/react-practice/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hongducphan/Desktop/react-practice/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hongducphan/Desktop/react-practice/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hongducphan/Desktop/react-practice/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hongducphan/Desktop/react-practice/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hongducphan/Desktop/react-practice/src/components/Name.js\";\nimport React, { Component } from \"react\";\n\nvar Name =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Name, _Component);\n\n  function Name(props) {\n    var _this;\n\n    _classCallCheck(this, Name);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Name).call(this, props));\n    _this.state = {\n      testState: _this.props.nameValue\n    };\n    return _this;\n  }\n\n  _createClass(Name, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.testState);\n      return React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.testState,\n        onChange: this.handleChange(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Name;\n}(Component);\n\nexport default Name;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/hongducphan/Desktop/react-practice/src/components/Name.js"
    ],
    "names": [
      "React",
      "Component",
      "Name",
      "props",
      "state",
      "testState",
      "nameValue",
      "event",
      "setState",
      "value",
      "target",
      "console",
      "log",
      "handleChange"
    ],
    "mappings": ";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWG;AADX,KAAb;AAFiB;AAKlB;;;;iCAEYC,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AADR,OAAd;AAGD;;;6BAEQ;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,SAAvB;AACA,aACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,SAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKQ,YAAL,EAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EAvBgBZ,S;;AA0BnB,eAAeC,IAAf",
    "sourcesContent": [
      "import React, { Component } from \"react\";\n\nclass Name extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testState: this.props.nameValue\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    console.log(this.state.testState);\n    return (\n      <input\n        type=\"text\"\n        value={this.state.testState}\n        onChange={this.handleChange()}\n      />\n    );\n  }\n}\n\nexport default Name;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
